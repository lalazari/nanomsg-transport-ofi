/*
    Copyright (c) 2015 Ioannis Charalampidis  All rights reserved.

    Permission is hereby granted, free of charge, to any person obtaining a copy
    of this software and associated documentation files (the "Software"),
    to deal in the Software without restriction, including without limitation
    the rights to use, copy, modify, merge, publish, distribute, sublicense,
    and/or sell copies of the Software, and to permit persons to whom
    the Software is furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included
    in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
    THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
    IN THE SOFTWARE.
*/

#ifndef NN_COFI_INCLUDED
#define NN_COFI_INCLUDED

#include "sofi.h"
#include "hlapi.h"

#include "../../transport.h"
#include "../../aio/fsm.h"
#include "../../utils/list.h"

/* Events from the AOFI */
#define NN_AOFI_ACCEPTED    1001

/* Accepting OFI FSM */
struct nn_aofi {

    /*  The state machine. */
    struct nn_fsm fsm;
    int state;

    /* The high-level api structures */
    struct ofi_resources        * ofi;
    struct ofi_passive_endpoint * pep;
    struct ofi_active_endpoint  ep;

    /* The underlaying connected state machine */
    struct nn_sofi sofi;

    /*  Events generated by aofi state machine. */
    struct nn_fsm_event accepted;

    /*  This member can be used by owner to keep individual atcps in a list. */
    struct nn_list_item item;

    /* Base endpoint address */
    struct nn_epbase *epbase;

};

/*  Initialize AOFI State machine */
void nn_aofi_init (struct nn_aofi *self, 
    struct ofi_resources *ofi,struct ofi_passive_endpoint *pep, 
    struct nn_epbase *epbase, int src, struct nn_fsm *owner);

/* Start AOFI  */
void nn_aofi_start (struct nn_aofi *self );


#endif
